quit
exit
display.reset!
@selected
n
!@selected
selected
@selected
s
@cursor.toggle_selected
exit
current_player
n
swap_turn!
exit
dup
q
pieces
dup
q
dup
pieces
q
self
q
board
board.empty?(move)
n
display move
s
n
pos
s
display dy
display dx
s
move_dirs
n
s
piece
q
piece.moves
n
q
piece.moves
s
moves
n
s
piece.moves
piece
n
end_pos
start_pos
q
n
piece.moves
piece
n
q
n
dx
moves
n
s
piece.moves.include?(end_pos)
piece.moves
n
empty?(start_pos)
end_pos
start_pos
q
n
moves
n
s
n
s
exit
n
move
moves
n
s
piece.valid_moves
n
piece.moves
n
exit
n
valid
n
q
n
q
dup
piece
piece.moves
n
end_pos
q
s
dup_board.in_check?(color)
dup_board
n
end_pos
pos
dup_board
n
s
self.move_into_check?(move)
n
self.move_into_check?(move)
display move
display valid
q
n
self.move_into_check?(move)
n
self.move_into_check?(move)
display valid
display move
move
moves
q
n
dup_board.in_check?(color)
dup_board
dup_board.move_piece(pos,end_pos)
n
dup_board
end_pos
pos
poq
q
n
self.move_into_check?(move)
move
n
self.move_into_check?(move)
move
n
s
move
moves
q
backtrace
valid
n
s
moves
q
board
board.empty?(move)
n
move
n
display moves
s
n
pos
n
display dy
display dx
s
dy
dx
s
n
s
piece.moves
end_pos
piece.moves.include?(end_pos)
q
n
s
dx
n
display dy
display dx
display moves
quit
n
piece.moves
n
move_dirs
grow_unblocked_moves_in_dir(dx, dy)
n
display dy
display dx
q
n
display moves
n
display dy
display dx
n
exit
board
dup_board
n
piece
n
display start_pos
n
empty?(start_pos)
s
display pos
n
display end_pos
s
display move
display moves
n
s
exit
n
s
exit
n
move
moves
exit
start_pos
n
s
n
end_pos
s
moves
n
pieces.any? {|piece| piece.color != color && piece.moves.include?(pos_king)}
n
pos_king
s
end_pos
dup_board.move_piece(pos,end_pos)
n
piece.moves.include?(end_pos)
n
empty?(start_pos)
s
end_pos
pos
n
dup_board
n
s
display end_pos
s
display move
display moves
n
s
exit
n
